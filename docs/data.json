{
    "project": {
        "name": "Sideshow",
        "description": "An incredible Javascript interactive help Library",
        "version": "0.3.4",
        "url": "http://github.com/fortesinformatica/sideshow",
        "logo": "http://github.com/fortesinformatica/sideshow/examples/images/sideshow-logo.svg"
    },
    "files": {
        "src\\general\\config.js": {
            "name": "src\\general\\config.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\general\\dictionary.js": {
            "name": "src\\general\\dictionary.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\general\\exception.js": {
            "name": "src\\general\\exception.js",
            "modules": {},
            "classes": {
                "SSException": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\general\\global_object.js": {
            "name": "src\\general\\global_object.js",
            "modules": {},
            "classes": {
                "CloseButton": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\general\\polling.js": {
            "name": "src\\general\\polling.js",
            "modules": {},
            "classes": {
                "Polling": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\general\\screen.js": {
            "name": "src\\general\\screen.js",
            "modules": {},
            "classes": {
                "Screen": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\general\\utility_functions.js": {
            "name": "src\\general\\utility_functions.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\general\\variables.js": {
            "name": "src\\general\\variables.js",
            "modules": {},
            "classes": {
                "SS": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\interface_itens\\fadable_item.js": {
            "name": "src\\interface_itens\\fadable_item.js",
            "modules": {},
            "classes": {
                "FadableItem": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\interface_itens\\hidable_item.js": {
            "name": "src\\interface_itens\\hidable_item.js",
            "modules": {},
            "classes": {
                "HidableItem": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\interface_itens\\visual_item.js": {
            "name": "src\\interface_itens\\visual_item.js",
            "modules": {},
            "classes": {
                "VisualItem": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\mask\\composite_mask.js": {
            "name": "src\\mask\\composite_mask.js",
            "modules": {},
            "classes": {
                "CompositeMask": 1,
                "Part": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\mask\\composite_mask_corner_part.js": {
            "name": "src\\mask\\composite_mask_corner_part.js",
            "modules": {},
            "classes": {
                "CornerPart": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\mask\\composite_mask_part.js": {
            "name": "src\\mask\\composite_mask_part.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\mask\\mask.js": {
            "name": "src\\mask\\mask.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {
                "Mask": 1
            }
        },
        "src\\mask\\subject_mask.js": {
            "name": "src\\mask\\subject_mask.js",
            "modules": {},
            "classes": {
                "Mask.SubjectMask": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\step\\arrow.js": {
            "name": "src\\step\\arrow.js",
            "modules": {},
            "classes": {
                "Mask.Arrow": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\step\\arrows.js": {
            "name": "src\\step\\arrows.js",
            "modules": {},
            "classes": {
                "Mask.Arrows": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\step\\step_description.js": {
            "name": "src\\step\\step_description.js",
            "modules": {},
            "classes": {
                "Mask.StepDescription": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\step\\step_description_next_button.js": {
            "name": "src\\step\\step_description_next_button.js",
            "modules": {},
            "classes": {
                "Mask.StepDescriptionNextButton": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\step\\step_details_panel.js": {
            "name": "src\\step\\step_details_panel.js",
            "modules": {},
            "classes": {
                "Mask.DetailsPanel": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\step\\subject.js": {
            "name": "src\\step\\subject.js",
            "modules": {},
            "classes": {
                "Mask.Subject": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\wizard\\wizard.js": {
            "name": "src\\wizard\\wizard.js",
            "modules": {},
            "classes": {
                "Mask.Wizard": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\wizard\\wizard_control_variables.js": {
            "name": "src\\wizard\\wizard_control_variables.js",
            "modules": {},
            "classes": {
                "Mask.ControlVariables": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\wizard\\wizard_menu.js": {
            "name": "src\\wizard\\wizard_menu.js",
            "modules": {},
            "classes": {
                "Mask.WizardMenu": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\copyright_info.js": {
            "name": "src\\copyright_info.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {
        "SSException": {
            "name": "SSException",
            "shortname": "SSException",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src\\general\\exception.js",
            "line": 1,
            "description": "A custom exception class for Sideshow",
            "extends": "Error",
            "params": [
                {
                    "name": "code",
                    "description": "The error code",
                    "type": "String"
                },
                {
                    "name": "message",
                    "description": "The error message",
                    "type": "String"
                }
            ]
        },
        "CloseButton": {
            "name": "CloseButton",
            "shortname": "CloseButton",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src\\general\\global_object.js",
            "line": 232,
            "description": "The close button for the wizard",
            "extends": "FadableItem"
        },
        "Polling": {
            "name": "Polling",
            "shortname": "Polling",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src\\general\\polling.js",
            "line": 1,
            "description": "Controls the polling functions needed by Sideshow",
            "static": 1
        },
        "Screen": {
            "name": "Screen",
            "shortname": "Screen",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src\\general\\screen.js",
            "line": 1,
            "description": "Represents the current available area in the browser",
            "static": 1
        },
        "SS": {
            "name": "SS",
            "shortname": "SS",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src\\general\\variables.js",
            "line": 8,
            "description": "The main class for Sideshow",
            "static": 1
        },
        "FadableItem": {
            "name": "FadableItem",
            "shortname": "FadableItem",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src\\interface_itens\\fadable_item.js",
            "line": 1,
            "description": "A visual item which holds fading in and out capabilities",
            "extends": "HidableItem"
        },
        "HidableItem": {
            "name": "HidableItem",
            "shortname": "HidableItem",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src\\interface_itens\\hidable_item.js",
            "line": 1,
            "description": "A visual item which can be shown and hidden",
            "extends": "VisualItem"
        },
        "VisualItem": {
            "name": "VisualItem",
            "shortname": "VisualItem",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src\\interface_itens\\visual_item.js",
            "line": 1,
            "description": "A visual item"
        },
        "CompositeMask": {
            "name": "CompositeMask",
            "shortname": "CompositeMask",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src\\mask\\composite_mask.js",
            "line": 1,
            "description": "Controls the mask surrounds the subject (the step focussed area)"
        },
        "Part": {
            "name": "Part",
            "shortname": "Part",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src\\mask\\composite_mask.js",
            "line": 181,
            "description": "A part composing the mask",
            "params": [
                {
                    "name": "position",
                    "description": "The positioning information",
                    "type": "Object"
                },
                {
                    "name": "dimension",
                    "description": "The dimension information",
                    "type": "Object"
                }
            ]
        },
        "CornerPart": {
            "name": "CornerPart",
            "shortname": "CornerPart",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src\\mask\\composite_mask_corner_part.js",
            "line": 1,
            "description": "A corner part composing the mask",
            "params": [
                {
                    "name": "position",
                    "description": "The positioning information",
                    "type": "Object"
                },
                {
                    "name": "dimension",
                    "description": "The dimension information",
                    "type": "Object"
                }
            ]
        },
        "Mask.SubjectMask": {
            "name": "Mask.SubjectMask",
            "shortname": "SubjectMask",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Mask",
            "file": "src\\mask\\subject_mask.js",
            "line": 1,
            "description": "Controls the mask that covers the subject during a step transition"
        },
        "Mask.Arrow": {
            "name": "Mask.Arrow",
            "shortname": "Arrow",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Mask",
            "file": "src\\step\\arrow.js",
            "line": 1,
            "description": "A single arrow for pointing individual items in current subject"
        },
        "Mask.Arrows": {
            "name": "Mask.Arrows",
            "shortname": "Arrows",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Mask",
            "file": "src\\step\\arrows.js",
            "line": 1,
            "description": "Class representing all the current shown arrows",
            "static": 1
        },
        "Mask.StepDescription": {
            "name": "Mask.StepDescription",
            "shortname": "StepDescription",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Mask",
            "file": "src\\step\\step_description.js",
            "line": 1,
            "description": "Represents a panel holding the step description",
            "extends": "FadableItem"
        },
        "Mask.StepDescriptionNextButton": {
            "name": "Mask.StepDescriptionNextButton",
            "shortname": "StepDescriptionNextButton",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Mask",
            "file": "src\\step\\step_description_next_button.js",
            "line": 1,
            "description": "Step next button",
            "extends": "HidableItem"
        },
        "Mask.DetailsPanel": {
            "name": "Mask.DetailsPanel",
            "shortname": "DetailsPanel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Mask",
            "file": "src\\step\\step_details_panel.js",
            "line": 1,
            "description": "The panel that holds step description, is positionated over the biggest remaining space among the four parts of a composite mask",
            "extends": "FadableItem"
        },
        "Mask.Subject": {
            "name": "Mask.Subject",
            "shortname": "Subject",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Mask",
            "file": "src\\step\\subject.js",
            "line": 1,
            "description": "The current subject (the object being shown by the current wizard)",
            "static": 1
        },
        "Mask.Wizard": {
            "name": "Mask.Wizard",
            "shortname": "Wizard",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Mask",
            "file": "src\\wizard\\wizard.js",
            "line": 1,
            "description": "Represents a tutorial",
            "params": [
                {
                    "name": "wizardConfig",
                    "description": "The wizard configuration object",
                    "type": "Object"
                }
            ]
        },
        "Mask.ControlVariables": {
            "name": "Mask.ControlVariables",
            "shortname": "ControlVariables",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Mask",
            "file": "src\\wizard\\wizard_control_variables.js",
            "line": 1,
            "description": "Stores the variables used in step evaluators",
            "static": 1
        },
        "Mask.WizardMenu": {
            "name": "Mask.WizardMenu",
            "shortname": "WizardMenu",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Mask",
            "file": "src\\wizard\\wizard_menu.js",
            "line": 1,
            "description": "The main menu, where the available wizards are listed",
            "static": 1
        }
    },
    "classitems": [
        {
            "file": "src\\general\\config.js",
            "line": 1,
            "description": "Sideshow Settings",
            "class": "SSException"
        },
        {
            "file": "src\\general\\config.js",
            "line": 8,
            "description": "Application route to persists user preferences",
            "type": "String",
            "class": "SSException"
        },
        {
            "file": "src\\general\\config.js",
            "line": 18,
            "description": "Logged in user",
            "type": "String",
            "class": "SSException"
        },
        {
            "file": "src\\general\\config.js",
            "line": 27,
            "description": "Chosen language for sideshow interface",
            "type": "String",
            "class": "SSException"
        },
        {
            "file": "src\\general\\config.js",
            "line": 35,
            "description": "Defines if the intro screen (the tutorial list) will be\tskipped when there's just one \ntutorial available. This way, when Sideshow is invoked, the first step is directly shown.",
            "type": "boolean",
            "class": "SSException"
        },
        {
            "file": "src\\general\\dictionary.js",
            "line": 1,
            "description": "Strings Dictionary",
            "class": "SSException"
        },
        {
            "file": "src\\general\\global_object.js",
            "line": 1,
            "description": "Initializes Sideshow",
            "itemtype": "method",
            "name": "init",
            "static": 1,
            "class": "CloseButton"
        },
        {
            "file": "src\\general\\global_object.js",
            "line": 18,
            "description": "Receives a function with just a multiline comment as body and converts to a here-document string",
            "itemtype": "method",
            "name": "heredoc",
            "params": [
                {
                    "name": "A",
                    "description": "function without body but a multiline comment",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "A multiline string",
                "type": "String"
            },
            "static": 1,
            "class": "CloseButton"
        },
        {
            "file": "src\\general\\global_object.js",
            "line": 30,
            "description": "Stops and Closes Sideshow",
            "itemtype": "method",
            "name": "closes",
            "static": 1,
            "class": "CloseButton"
        },
        {
            "file": "src\\general\\global_object.js",
            "line": 103,
            "description": "A trick to use the composite mask to simulate the behavior of a solid mask, setting an empty subject",
            "itemtype": "method",
            "name": "setEmptySubject",
            "static": 1,
            "class": "CloseButton"
        },
        {
            "file": "src\\general\\global_object.js",
            "line": 130,
            "description": "Sets the current subject",
            "itemtype": "method",
            "name": "setSubject",
            "params": [
                {
                    "name": "subj",
                    "description": "",
                    "type": "Object"
                }
            ],
            "static": 1,
            "class": "CloseButton"
        },
        {
            "file": "src\\general\\global_object.js",
            "line": 152,
            "description": "Registers a wizard",
            "itemtype": "method",
            "name": "registerWizard",
            "params": [
                {
                    "name": "wizardConfig",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The wizard instance",
                "type": "Object"
            },
            "static": 1,
            "class": "CloseButton"
        },
        {
            "file": "src\\general\\global_object.js",
            "line": 166,
            "description": "Registers a wizard",
            "itemtype": "method",
            "name": "registerWizard",
            "params": [
                {
                    "name": "onlyNew",
                    "description": "Checks only recently added wizards",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "The eligible wizards list",
                "type": "Array"
            },
            "static": 1,
            "class": "CloseButton"
        },
        {
            "file": "src\\general\\global_object.js",
            "line": 188,
            "description": "Checks if there are eligible wizards, if exists, shows the wizard menu",
            "itemtype": "method",
            "name": "showWizardsList",
            "params": [
                {
                    "name": "onlyNew",
                    "description": "Checks only recently added wizards",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "Returns a boolean indicating whether there is some wizard available",
                "type": "Boolean"
            },
            "static": 1,
            "class": "CloseButton"
        },
        {
            "file": "src\\general\\global_object.js",
            "line": 207,
            "description": "Shows a list with the related wizards",
            "itemtype": "method",
            "name": "showRelatedWizardsList",
            "params": [
                {
                    "name": "completedWizard",
                    "description": "The recently completed wizard",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns a boolean indicating whether there is some related wizard available",
                "type": "Boolean"
            },
            "static": 1,
            "class": "CloseButton"
        },
        {
            "file": "src\\general\\global_object.js",
            "line": 241,
            "description": "Renders the close button",
            "itemtype": "method",
            "name": "render",
            "class": "CloseButton"
        },
        {
            "file": "src\\general\\global_object.js",
            "line": 256,
            "description": "Starts Sideshow",
            "itemtype": "method",
            "name": "start",
            "params": [
                {
                    "name": "config",
                    "description": "The config object for Sideshow",
                    "type": "Object"
                }
            ],
            "class": "CloseButton"
        },
        {
            "file": "src\\general\\polling.js",
            "line": 9,
            "description": "The polling functions queue",
            "type": "Object",
            "static": 1,
            "class": "Polling"
        },
        {
            "file": "src\\general\\polling.js",
            "line": 18,
            "description": "A flag that controls if the polling is locked",
            "type": "boolean",
            "static": 1,
            "class": "Polling"
        },
        {
            "file": "src\\general\\polling.js",
            "line": 27,
            "description": "Pushes a polling function in the queue",
            "itemtype": "method",
            "name": "enqueue",
            "static": 1,
            "class": "Polling"
        },
        {
            "file": "src\\general\\polling.js",
            "line": 52,
            "description": "Removes a polling function from the queue",
            "itemtype": "method",
            "name": "dequeue",
            "static": 1,
            "class": "Polling"
        },
        {
            "file": "src\\general\\polling.js",
            "line": 62,
            "description": "Enables an specific polling function",
            "itemtype": "method",
            "name": "enable",
            "static": 1,
            "class": "Polling"
        },
        {
            "file": "src\\general\\polling.js",
            "line": 72,
            "description": "Disables an specific polling function, but preserving it in the polling queue",
            "itemtype": "method",
            "name": "disable",
            "static": 1,
            "class": "Polling"
        },
        {
            "file": "src\\general\\polling.js",
            "line": 82,
            "description": "Gets the position of a polling function in the queue based on its name or the function itself",
            "itemtype": "method",
            "name": "getFunctionIndex",
            "static": 1,
            "class": "Polling"
        },
        {
            "file": "src\\general\\polling.js",
            "line": 99,
            "description": "Unlocks the polling and starts the checking process",
            "itemtype": "method",
            "name": "start",
            "static": 1,
            "class": "Polling"
        },
        {
            "file": "src\\general\\polling.js",
            "line": 110,
            "description": "Stops the polling process",
            "itemtype": "method",
            "name": "stop",
            "static": 1,
            "class": "Polling"
        },
        {
            "file": "src\\general\\polling.js",
            "line": 120,
            "description": "Clear the polling queue",
            "itemtype": "method",
            "name": "clear",
            "static": 1,
            "class": "Polling"
        },
        {
            "file": "src\\general\\polling.js",
            "line": 134,
            "description": "Starts the polling process",
            "itemtype": "method",
            "name": "doPolling",
            "static": 1,
            "class": "Polling"
        },
        {
            "file": "src\\general\\screen.js",
            "line": 9,
            "description": "Object holding dimension information for the screen",
            "static": 1,
            "type": "Object",
            "class": "Screen"
        },
        {
            "file": "src\\general\\screen.js",
            "line": 18,
            "description": "Checks if the screen dimension information has changed",
            "itemtype": "method",
            "name": "hasChanged",
            "static": 1,
            "return": {
                "description": "boolean"
            },
            "class": "Screen"
        },
        {
            "file": "src\\general\\screen.js",
            "line": 30,
            "description": "Updates the dimension information for the screen",
            "itemtype": "method",
            "name": "updateInfo",
            "static": 1,
            "class": "Screen"
        },
        {
            "file": "src\\general\\utility_functions.js",
            "line": 1,
            "description": "Shows a warning  in a pre-defined format",
            "params": [
                {
                    "name": "code",
                    "description": "The warning code",
                    "type": "String"
                },
                {
                    "name": "message",
                    "description": "The warning message",
                    "type": "String"
                }
            ],
            "class": "SS"
        },
        {
            "file": "src\\general\\utility_functions.js",
            "line": 12,
            "description": "Parses a string in the format \"#px\" in a number",
            "params": [
                {
                    "name": "value",
                    "description": "A value with/without a px unit",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Number                                        The number value without unit"
            },
            "class": "SS"
        },
        {
            "file": "src\\general\\utility_functions.js",
            "line": 25,
            "description": "Gets a string from the dictionary in the current language",
            "params": [
                {
                    "name": "stringKeyValuePair",
                    "description": "A string key-value pair in dictionary",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "String                                        The string value in the current language"
            },
            "class": "SS"
        },
        {
            "file": "src\\general\\utility_functions.js",
            "line": 41,
            "description": "Registers hotkeys to be used when running Sideshow",
            "class": "SS"
        },
        {
            "file": "src\\general\\utility_functions.js",
            "line": 50,
            "description": "Unregisters hotkeys used when running Sideshow",
            "class": "SS"
        },
        {
            "file": "src\\general\\utility_functions.js",
            "line": 64,
            "description": "Registers global hotkeys",
            "class": "SS"
        },
        {
            "file": "src\\general\\utility_functions.js",
            "line": 81,
            "description": "Removes nodes created by Sideshow (except mask, which remains due to performance reasons when recalling Sideshow)",
            "class": "SS"
        },
        {
            "file": "src\\general\\variables.js",
            "line": 15,
            "description": "The current Sideshow version",
            "itemtype": "property",
            "name": "VERSION",
            "type": "String",
            "class": "SS"
        },
        {
            "file": "src\\general\\variables.js",
            "line": 36,
            "description": "Possible statuses for an animation",
            "class": "SS"
        },
        {
            "file": "src\\interface_itens\\fadable_item.js",
            "line": 10,
            "description": "Does a fade in transition for the visual item",
            "itemtype": "method",
            "name": "fadeIn",
            "class": "FadableItem"
        },
        {
            "file": "src\\interface_itens\\fadable_item.js",
            "line": 35,
            "description": "Does a fade out transition for the visual item",
            "itemtype": "method",
            "name": "fadeOut",
            "class": "FadableItem"
        },
        {
            "file": "src\\interface_itens\\hidable_item.js",
            "line": 10,
            "description": "Shows the visual item",
            "itemtype": "method",
            "name": "show",
            "params": [
                {
                    "name": "displayButKeepTransparent",
                    "description": "The item will hold space but keep invisible",
                    "type": "Boolean"
                }
            ],
            "class": "HidableItem"
        },
        {
            "file": "src\\interface_itens\\hidable_item.js",
            "line": 23,
            "description": "Hides the visual item",
            "itemtype": "method",
            "name": "hide",
            "class": "HidableItem"
        },
        {
            "file": "src\\interface_itens\\visual_item.js",
            "line": 9,
            "description": "The jQuery wrapped DOM element for the visual item",
            "type": "Object",
            "class": "VisualItem"
        },
        {
            "file": "src\\interface_itens\\visual_item.js",
            "line": 17,
            "description": "The jQuery wrapped DOM element for the visual item",
            "type": "AnimationStatus",
            "class": "VisualItem"
        },
        {
            "file": "src\\interface_itens\\visual_item.js",
            "line": 25,
            "description": "Renders the item's DOM object",
            "itemtype": "method",
            "name": "render",
            "class": "VisualItem"
        },
        {
            "file": "src\\interface_itens\\visual_item.js",
            "line": 35,
            "description": "Destroys the item's DOM object",
            "itemtype": "method",
            "name": "destroy",
            "class": "VisualItem"
        },
        {
            "file": "src\\mask\\composite_mask.js",
            "line": 9,
            "description": "Initializes the composite mask",
            "itemtype": "method",
            "name": "init",
            "class": "CompositeMask"
        },
        {
            "file": "src\\mask\\composite_mask.js",
            "line": 24,
            "description": "The parts composing the mask",
            "type": "Object",
            "class": "CompositeMask"
        },
        {
            "file": "src\\mask\\composite_mask.js",
            "line": 32,
            "description": "Renders the composite mask",
            "itemtype": "method",
            "name": "render",
            "class": "CompositeMask"
        },
        {
            "file": "src\\mask\\composite_mask.js",
            "line": 52,
            "description": "Checks if the subject is fully visible, if not, scrolls 'til it became fully visible",
            "itemtype": "method",
            "name": "scrollIfNecessary",
            "params": [
                {
                    "name": "position",
                    "description": "An object representing the positioning info for the mask",
                    "type": "Object"
                },
                {
                    "name": "dimension",
                    "description": "An object representing the dimension info for the mask",
                    "type": "Object"
                }
            ],
            "class": "CompositeMask"
        },
        {
            "file": "src\\mask\\composite_mask.js",
            "line": 84,
            "description": "Updates the positioning and dimension of each part composing the whole mask, according to the subject coordinates",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "position",
                    "description": "An object representing the positioning info for the mask",
                    "type": "Object"
                },
                {
                    "name": "dimension",
                    "description": "An object representing the dimension info for the mask",
                    "type": "Object"
                },
                {
                    "name": "borderRadius",
                    "description": "An object representing the borderRadius info for the mask",
                    "type": "Object"
                }
            ],
            "class": "CompositeMask"
        },
        {
            "file": "src\\mask\\composite_mask.js",
            "line": 150,
            "description": "A Polling function to check if subject coordinates has changed",
            "itemtype": "method",
            "name": "pollForSubjectChanges",
            "class": "CompositeMask"
        },
        {
            "file": "src\\mask\\composite_mask.js",
            "line": 169,
            "description": "A Polling function to check if screen dimension has changed",
            "itemtype": "method",
            "name": "pollForScreenChanges",
            "class": "CompositeMask"
        },
        {
            "file": "src\\mask\\composite_mask_corner_part.js",
            "line": 11,
            "class": "CornerPart"
        },
        {
            "file": "src\\mask\\composite_mask_corner_part.js",
            "line": 17,
            "description": "An object holding positioning information for the mask corner part",
            "type": "Object",
            "class": "CornerPart"
        },
        {
            "file": "src\\mask\\composite_mask_corner_part.js",
            "line": 25,
            "description": "An object holding dimension information for the mask corner part",
            "type": "Object",
            "class": "CornerPart"
        },
        {
            "file": "src\\mask\\composite_mask_corner_part.js",
            "line": 33,
            "description": "An object holding border radius information for the mask corner part",
            "type": "Object",
            "class": "CornerPart"
        },
        {
            "file": "src\\mask\\composite_mask_corner_part.js",
            "line": 41,
            "description": "Formats the SVG path for the corner part",
            "itemtype": "method",
            "name": "SVGPathPointsTemplate",
            "params": [
                {
                    "name": "borderRadius",
                    "description": "The corner part border radius",
                    "type": "Number"
                }
            ],
            "static": 1,
            "class": "CornerPart"
        },
        {
            "file": "src\\mask\\composite_mask_corner_part.js",
            "line": 52,
            "description": "Renders the SVG for the corner part",
            "itemtype": "method",
            "name": "buildSVG",
            "params": [
                {
                    "name": "borderRadius",
                    "description": "The corner part border radius",
                    "type": "Number"
                }
            ],
            "static": 1,
            "class": "CornerPart"
        },
        {
            "file": "src\\mask\\composite_mask_corner_part.js",
            "line": 74,
            "description": "Renders the mask corner part",
            "itemtype": "method",
            "name": "render",
            "return": {
                "description": "The corner part jQuery wrapped DOM element",
                "type": "Object"
            },
            "class": "CornerPart"
        },
        {
            "file": "src\\mask\\composite_mask_corner_part.js",
            "line": 90,
            "description": "Updates the positioning and border radius of the mask corner part",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "position",
                    "description": "The positioning information",
                    "type": "Object"
                },
                {
                    "name": "borderRadius",
                    "description": "The border radius information",
                    "type": "Object"
                }
            ],
            "class": "CornerPart"
        },
        {
            "file": "src\\mask\\composite_mask_part.js",
            "line": 1,
            "class": "Mask.SubjectMask"
        },
        {
            "file": "src\\mask\\composite_mask_part.js",
            "line": 7,
            "description": "An object holding positioning information for the mask part",
            "type": "Object",
            "class": "Mask.SubjectMask"
        },
        {
            "file": "src\\mask\\composite_mask_part.js",
            "line": 15,
            "description": "An object holding dimension information for the mask part",
            "type": "Object",
            "class": "Mask.SubjectMask"
        },
        {
            "file": "src\\mask\\composite_mask_part.js",
            "line": 23,
            "description": "Renders the mask part",
            "itemtype": "method",
            "name": "render",
            "class": "Mask.SubjectMask"
        },
        {
            "file": "src\\mask\\composite_mask_part.js",
            "line": 36,
            "description": "Updates the dimension and positioning of the subject mask part",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "position",
                    "description": "The positioning information",
                    "type": "Object"
                },
                {
                    "name": "dimension",
                    "description": "The dimension information",
                    "type": "Object"
                }
            ],
            "class": "Mask.SubjectMask"
        },
        {
            "file": "src\\mask\\mask.js",
            "line": 1,
            "description": "Namespace to hold classes for mask control",
            "class": "Mask.SubjectMask",
            "namespace": "Mask"
        },
        {
            "file": "src\\mask\\subject_mask.js",
            "line": 9,
            "description": "Renders the subject mask",
            "itemtype": "method",
            "name": "render",
            "class": "Mask.SubjectMask",
            "namespace": "Mask"
        },
        {
            "file": "src\\mask\\subject_mask.js",
            "line": 19,
            "description": "Updates the dimension, positioning and border radius of the subject mask",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "position",
                    "description": "The positioning information",
                    "type": "Object"
                },
                {
                    "name": "dimension",
                    "description": "The dimension information",
                    "type": "Object"
                },
                {
                    "name": "borderRadius",
                    "description": "The border radius information",
                    "type": "Object"
                }
            ],
            "class": "Mask.SubjectMask",
            "namespace": "Mask"
        },
        {
            "file": "src\\step\\arrow.js",
            "line": 8,
            "description": "The jQuery wrapped object which will be pointed by this arrow",
            "type": "Object",
            "class": "Mask.Arrow",
            "namespace": "Mask"
        },
        {
            "file": "src\\step\\arrow.js",
            "line": 16,
            "description": "Flag created to set if the arrow was visible once, this is used for recreating references to the targets DOM objects",
            "type": "Object",
            "class": "Mask.Arrow",
            "namespace": "Mask"
        },
        {
            "file": "src\\step\\arrow.js",
            "line": 24,
            "description": "Renders the Arrow",
            "itemtype": "method",
            "name": "render",
            "class": "Mask.Arrow",
            "namespace": "Mask"
        },
        {
            "file": "src\\step\\arrow.js",
            "line": 37,
            "description": "Positionates the Arrow according to its target",
            "itemtype": "method",
            "name": "positionate",
            "class": "Mask.Arrow",
            "namespace": "Mask"
        },
        {
            "file": "src\\step\\arrow.js",
            "line": 57,
            "description": "Shows the Arrow",
            "itemtype": "method",
            "name": "show",
            "class": "Mask.Arrow",
            "namespace": "Mask"
        },
        {
            "file": "src\\step\\arrow.js",
            "line": 67,
            "description": "Does a fade in transition in the Arrow",
            "itemtype": "method",
            "name": "fadeIn",
            "class": "Mask.Arrow",
            "namespace": "Mask"
        },
        {
            "file": "src\\step\\arrow.js",
            "line": 77,
            "description": "Checks if the arrow's target position or dimension has changed",
            "itemtype": "method",
            "name": "hasChanged",
            "return": {
                "description": "boolean"
            },
            "class": "Mask.Arrow",
            "namespace": "Mask"
        },
        {
            "file": "src\\step\\arrows.js",
            "line": 11,
            "description": "Clear the currently defined arrows",
            "itemtype": "method",
            "name": "clear",
            "static": 1,
            "class": "Mask.Arrows",
            "namespace": "Mask"
        },
        {
            "file": "src\\step\\arrows.js",
            "line": 21,
            "description": "Sets the targets for arrows to point",
            "itemtype": "method",
            "name": "setTargets",
            "static": 1,
            "class": "Mask.Arrows",
            "namespace": "Mask"
        },
        {
            "file": "src\\step\\arrows.js",
            "line": 57,
            "description": "Iterates over the arrows collection showing each arrow",
            "itemtype": "method",
            "name": "show",
            "static": 1,
            "class": "Mask.Arrows",
            "namespace": "Mask"
        },
        {
            "file": "src\\step\\arrows.js",
            "line": 70,
            "description": "Iterates over the arrows collection hiding each arrow",
            "itemtype": "method",
            "name": "hide",
            "static": 1,
            "class": "Mask.Arrows",
            "namespace": "Mask"
        },
        {
            "file": "src\\step\\arrows.js",
            "line": 83,
            "description": "Iterates over the arrows collection fading in each arrow",
            "itemtype": "method",
            "name": "fadeIn",
            "static": 1,
            "class": "Mask.Arrows",
            "namespace": "Mask"
        },
        {
            "file": "src\\step\\arrows.js",
            "line": 96,
            "description": "Iterates over the arrows collection fading out each arrow",
            "itemtype": "method",
            "name": "fadeOut",
            "static": 1,
            "class": "Mask.Arrows",
            "namespace": "Mask"
        },
        {
            "file": "src\\step\\arrows.js",
            "line": 115,
            "description": "Iterates over the arrows collection repositionating each arrow",
            "itemtype": "method",
            "name": "positionate",
            "static": 1,
            "class": "Mask.Arrows",
            "namespace": "Mask"
        },
        {
            "file": "src\\step\\arrows.js",
            "line": 128,
            "description": "Iterates over the arrows collection rendering each arrow",
            "itemtype": "method",
            "name": "render",
            "static": 1,
            "class": "Mask.Arrows",
            "namespace": "Mask"
        },
        {
            "file": "src\\step\\arrows.js",
            "line": 141,
            "description": "A Polling function to check if arrows coordinates has changed",
            "itemtype": "method",
            "name": "pollForArrowsChanges",
            "class": "Mask.Arrows",
            "namespace": "Mask"
        },
        {
            "file": "src\\step\\step_description.js",
            "line": 12,
            "description": "The step description text content",
            "type": "String",
            "class": "Mask.StepDescription",
            "namespace": "Mask"
        },
        {
            "file": "src\\step\\step_description.js",
            "line": 20,
            "description": "The title text for the step description panel",
            "type": "String",
            "class": "Mask.StepDescription",
            "namespace": "Mask"
        },
        {
            "file": "src\\step\\step_description.js",
            "line": 28,
            "description": "An object holding dimension information for the Step Description panel",
            "type": "Object",
            "class": "Mask.StepDescription",
            "namespace": "Mask"
        },
        {
            "file": "src\\step\\step_description.js",
            "line": 36,
            "description": "An object holding positioning information for the Step Description panel",
            "type": "Object",
            "class": "Mask.StepDescription",
            "namespace": "Mask"
        },
        {
            "file": "src\\step\\step_description.js",
            "line": 44,
            "description": "An object representing the next button for a step description panel",
            "type": "Object",
            "class": "Mask.StepDescription",
            "namespace": "Mask"
        },
        {
            "file": "src\\step\\step_description.js",
            "line": 52,
            "description": "Sets the text for the step description panel",
            "itemtype": "method",
            "name": "setText",
            "params": [
                {
                    "name": "text",
                    "description": "The text for the step description panel",
                    "type": "String"
                }
            ],
            "class": "Mask.StepDescription",
            "namespace": "Mask"
        },
        {
            "file": "src\\step\\step_description.js",
            "line": 63,
            "description": "Sets the HTML content for the step description panel",
            "itemtype": "method",
            "name": "setHTML",
            "params": [
                {
                    "name": "text",
                    "description": "The HTML content for step description panel",
                    "type": "String"
                }
            ],
            "class": "Mask.StepDescription",
            "namespace": "Mask"
        },
        {
            "file": "src\\step\\step_description.js",
            "line": 74,
            "description": "Sets the title for the step description panel",
            "itemtype": "method",
            "name": "setTitle",
            "params": [
                {
                    "name": "title",
                    "description": "The text for the step description panel",
                    "type": "String"
                }
            ],
            "class": "Mask.StepDescription",
            "namespace": "Mask"
        },
        {
            "file": "src\\step\\step_description.js",
            "line": 85,
            "description": "Sets the title for the step description panel",
            "itemtype": "method",
            "name": "setStepPosition",
            "params": [
                {
                    "name": "title",
                    "description": "The text for the step description panel",
                    "type": "String"
                }
            ],
            "class": "Mask.StepDescription",
            "namespace": "Mask"
        },
        {
            "file": "src\\step\\step_description.js",
            "line": 96,
            "description": "Renders the step description panel",
            "itemtype": "method",
            "name": "render",
            "class": "Mask.StepDescription",
            "namespace": "Mask"
        },
        {
            "file": "src\\step\\step_description.js",
            "line": 120,
            "description": "Shows the step description panel",
            "itemtype": "method",
            "name": "show",
            "class": "Mask.StepDescription",
            "namespace": "Mask"
        },
        {
            "file": "src\\step\\step_description.js",
            "line": 130,
            "description": "Positionates the step description panel",
            "itemtype": "method",
            "name": "positionate",
            "class": "Mask.StepDescription",
            "namespace": "Mask"
        },
        {
            "file": "src\\step\\step_description_next_button.js",
            "line": 9,
            "description": "The text for the next button",
            "access": "private",
            "tagname": "",
            "class": "Mask.StepDescriptionNextButton",
            "namespace": "Mask"
        },
        {
            "file": "src\\step\\step_description_next_button.js",
            "line": 17,
            "description": "Disables the next button",
            "itemtype": "method",
            "name": "disable",
            "class": "Mask.StepDescriptionNextButton",
            "namespace": "Mask"
        },
        {
            "file": "src\\step\\step_description_next_button.js",
            "line": 26,
            "description": "Enables the next button",
            "itemtype": "method",
            "name": "enable",
            "class": "Mask.StepDescriptionNextButton",
            "namespace": "Mask"
        },
        {
            "file": "src\\step\\step_description_next_button.js",
            "line": 35,
            "description": "Sets the text for the next button",
            "itemtype": "method",
            "name": "setText",
            "params": [
                {
                    "name": "text",
                    "description": "The text for the next button",
                    "type": "String"
                }
            ],
            "class": "Mask.StepDescriptionNextButton",
            "namespace": "Mask"
        },
        {
            "file": "src\\step\\step_description_next_button.js",
            "line": 46,
            "description": "Renders the Next Button",
            "itemtype": "method",
            "name": "render",
            "params": [
                {
                    "name": "$stepDescriptionEl",
                    "description": "The jQuery wrapped DOM element for the Step Description panel",
                    "type": "Object"
                }
            ],
            "class": "Mask.StepDescriptionNextButton",
            "namespace": "Mask"
        },
        {
            "file": "src\\step\\step_details_panel.js",
            "line": 10,
            "description": "An object holding dimension information for the Details Panel",
            "type": "Object",
            "class": "Mask.DetailsPanel",
            "namespace": "Mask"
        },
        {
            "file": "src\\step\\step_details_panel.js",
            "line": 18,
            "description": "An object holding positioning information for the Details Panel",
            "type": "Object",
            "class": "Mask.DetailsPanel",
            "namespace": "Mask"
        },
        {
            "file": "src\\step\\step_details_panel.js",
            "line": 26,
            "description": "Renders the Details Panel",
            "itemtype": "method",
            "name": "render",
            "class": "Mask.DetailsPanel",
            "namespace": "Mask"
        },
        {
            "file": "src\\step\\step_details_panel.js",
            "line": 38,
            "description": "Positionates the panel automatically, calculating the biggest available area and putting the panel over there",
            "itemtype": "method",
            "name": "positionate",
            "class": "Mask.DetailsPanel",
            "namespace": "Mask"
        },
        {
            "file": "src\\step\\subject.js",
            "line": 9,
            "description": "The current subject jQuery wrapped DOM element",
            "static": 1,
            "type": "Object",
            "class": "Mask.Subject",
            "namespace": "Mask"
        },
        {
            "file": "src\\step\\subject.js",
            "line": 18,
            "description": "The current subject dimension information",
            "static": 1,
            "type": "Object",
            "class": "Mask.Subject",
            "namespace": "Mask"
        },
        {
            "file": "src\\step\\subject.js",
            "line": 27,
            "description": "The current subject positioning information",
            "static": 1,
            "type": "Object",
            "class": "Mask.Subject",
            "namespace": "Mask"
        },
        {
            "file": "src\\step\\subject.js",
            "line": 36,
            "description": "The current subject border radius information",
            "static": 1,
            "type": "Object",
            "class": "Mask.Subject",
            "namespace": "Mask"
        },
        {
            "file": "src\\step\\subject.js",
            "line": 45,
            "description": "Checks if the object has changed since the last checking",
            "itemtype": "method",
            "name": "hasChanged",
            "return": {
                "description": "boolean"
            },
            "class": "Mask.Subject",
            "namespace": "Mask"
        },
        {
            "file": "src\\step\\subject.js",
            "line": 65,
            "description": "Updates the information about the suject",
            "itemtype": "method",
            "name": "updateInfo",
            "params": [
                {
                    "name": "config",
                    "description": "Dimension, positioning and border radius information",
                    "type": "Object"
                }
            ],
            "class": "Mask.Subject",
            "namespace": "Mask"
        },
        {
            "file": "src\\wizard\\wizard.js",
            "line": 20,
            "description": "A function to prepare the environment for running a wizard (e.g. redirecting to some screen)",
            "type": "Function",
            "class": "Mask.Wizard",
            "namespace": "Mask"
        },
        {
            "file": "src\\wizard\\wizard.js",
            "line": 28,
            "description": "An object with listeners to this wizard (e.g. beforeWizardStarts, afterWizardEnds)",
            "type": "Object",
            "class": "Mask.Wizard",
            "namespace": "Mask"
        },
        {
            "file": "src\\wizard\\wizard.js",
            "line": 36,
            "description": "A configuration flag that defines if the step position (e.g. 2/10, 3/15, 12/12) will be shown",
            "type": "boolean",
            "class": "Mask.Wizard",
            "namespace": "Mask"
        },
        {
            "file": "src\\wizard\\wizard.js",
            "line": 44,
            "description": "An array with related wizards names. These wizards are listed after the ending of the current wizard.",
            "type": "Array",
            "class": "Mask.Wizard",
            "namespace": "Mask"
        },
        {
            "file": "src\\wizard\\wizard.js",
            "line": 52,
            "description": "The wizard unique name (used internally as an identifier)",
            "type": "String",
            "class": "Mask.Wizard",
            "namespace": "Mask"
        },
        {
            "file": "src\\wizard\\wizard.js",
            "line": 60,
            "description": "The wizard title (will be shown in the list of available wizards)",
            "type": "String",
            "class": "Mask.Wizard",
            "namespace": "Mask"
        },
        {
            "file": "src\\wizard\\wizard.js",
            "line": 68,
            "description": "The wizard description (will be shown in the list of available wizards)",
            "type": "String",
            "class": "Mask.Wizard",
            "namespace": "Mask"
        },
        {
            "file": "src\\wizard\\wizard.js",
            "line": 76,
            "description": "The wizard estimated completion time (will be shown in the list of available wizards)",
            "type": "String",
            "class": "Mask.Wizard",
            "namespace": "Mask"
        },
        {
            "file": "src\\wizard\\wizard.js",
            "line": 84,
            "description": "A collection of rules to infer whether a wizard should be available in a specific screen",
            "type": "Array",
            "class": "Mask.Wizard",
            "namespace": "Mask"
        },
        {
            "file": "src\\wizard\\wizard.js",
            "line": 92,
            "description": "The sequence of steps for this wizard",
            "access": "private",
            "tagname": "",
            "type": "Object",
            "class": "Mask.Wizard",
            "namespace": "Mask"
        },
        {
            "file": "src\\wizard\\wizard.js",
            "line": 101,
            "description": "Points to the current step object in a playing wizard",
            "type": "Object",
            "class": "Mask.Wizard",
            "namespace": "Mask"
        },
        {
            "file": "src\\wizard\\wizard.js",
            "line": 109,
            "description": "Sets the storyline for the wizard",
            "itemtype": "method",
            "name": "storyLine",
            "class": "Mask.Wizard",
            "namespace": "Mask"
        },
        {
            "file": "src\\wizard\\wizard.js",
            "line": 118,
            "description": "Runs the wizard",
            "itemtype": "method",
            "name": "play",
            "class": "Mask.Wizard",
            "namespace": "Mask"
        },
        {
            "file": "src\\wizard\\wizard.js",
            "line": 162,
            "description": "Shows a specific step",
            "itemtype": "method",
            "name": "showStep",
            "params": [
                {
                    "name": "step",
                    "description": "The step to be shown",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "A callback function to be called",
                    "type": "Function"
                }
            ],
            "class": "Mask.Wizard",
            "namespace": "Mask"
        },
        {
            "file": "src\\wizard\\wizard.js",
            "line": 257,
            "description": "Shows the next step of the wizard",
            "itemtype": "method",
            "name": "next",
            "params": [
                {
                    "name": "callback",
                    "description": "A callback function to be called",
                    "type": "Function"
                }
            ],
            "class": "Mask.Wizard",
            "namespace": "Mask"
        },
        {
            "file": "src\\wizard\\wizard.js",
            "line": 289,
            "description": "Hides the step",
            "itemtype": "method",
            "name": "hideStep",
            "params": [
                {
                    "name": "callback",
                    "description": "A callback function to be called in the ending of the hiding process",
                    "type": "Function"
                }
            ],
            "class": "Mask.Wizard",
            "namespace": "Mask"
        },
        {
            "file": "src\\wizard\\wizard.js",
            "line": 304,
            "description": "Returns the position of the step passed as argument or (by default) the current step",
            "itemtype": "method",
            "name": "getStepPosition",
            "params": [
                {
                    "name": "step",
                    "description": "The step object to get position",
                    "type": "Object"
                }
            ],
            "class": "Mask.Wizard",
            "namespace": "Mask"
        },
        {
            "file": "src\\wizard\\wizard.js",
            "line": 314,
            "description": "Checks if a wizard should be shown in the current context (running each evaluator defined for this wizard)",
            "itemtype": "method",
            "name": "isEligible",
            "return": {
                "description": "A boolean indicating if this wizard should be available in the current context",
                "type": "Boolean"
            },
            "class": "Mask.Wizard",
            "namespace": "Mask"
        },
        {
            "file": "src\\wizard\\wizard.js",
            "line": 349,
            "description": "Checks if the current user already watched this wizard",
            "itemtype": "method",
            "name": "isAlreadyWatched",
            "return": {
                "description": "A boolean indicating if the user watched this wizard",
                "type": "Boolean"
            },
            "class": "Mask.Wizard",
            "namespace": "Mask"
        },
        {
            "file": "src\\wizard\\wizard.js",
            "line": 361,
            "description": "A Polling function to check if the current step is completed",
            "itemtype": "method",
            "name": "pollForCheckCompletedStep",
            "class": "Mask.Wizard",
            "namespace": "Mask"
        },
        {
            "file": "src\\wizard\\wizard_control_variables.js",
            "line": 9,
            "description": "Sets a variable value",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "name",
                    "description": "The variable name",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "The variable value",
                    "type": "String"
                }
            ],
            "return": {
                "description": "A formatted key=value pair representing the defined variable",
                "type": "String"
            },
            "class": "Mask.ControlVariables",
            "namespace": "Mask"
        },
        {
            "file": "src\\wizard\\wizard_control_variables.js",
            "line": 28,
            "description": "Sets a variable if not defined yet",
            "itemtype": "method",
            "name": "setIfUndefined",
            "params": [
                {
                    "name": "name",
                    "description": "The variable name",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "The variable value",
                    "type": "String"
                }
            ],
            "return": {
                "description": "A formatted key=value pair representing the defined variable",
                "type": "String"
            },
            "class": "Mask.ControlVariables",
            "namespace": "Mask"
        },
        {
            "file": "src\\wizard\\wizard_control_variables.js",
            "line": 40,
            "description": "Checks if some variable is already defined",
            "itemtype": "method",
            "name": "isDefined",
            "params": [
                {
                    "name": "name",
                    "description": "The variable name",
                    "type": "String"
                }
            ],
            "return": {
                "description": "A boolean indicating if the variable is already defined",
                "type": "Boolean"
            },
            "class": "Mask.ControlVariables",
            "namespace": "Mask"
        },
        {
            "file": "src\\wizard\\wizard_control_variables.js",
            "line": 51,
            "description": "Gets a variable value",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "name",
                    "description": "The variable name",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The variable value",
                "type": "Any"
            },
            "class": "Mask.ControlVariables",
            "namespace": "Mask"
        },
        {
            "file": "src\\wizard\\wizard_control_variables.js",
            "line": 63,
            "description": "Gets a pair with name and value",
            "itemtype": "method",
            "name": "getNameValuePair",
            "params": [
                {
                    "name": "name",
                    "description": "The variable name",
                    "type": "String"
                }
            ],
            "return": {
                "description": "A pair with the variable name and value",
                "type": "Object"
            },
            "class": "Mask.ControlVariables",
            "namespace": "Mask"
        },
        {
            "file": "src\\wizard\\wizard_control_variables.js",
            "line": 77,
            "description": "Remove some variable from the control variables collection",
            "itemtype": "method",
            "name": "remove",
            "params": [
                {
                    "name": "name",
                    "description": "The variable name",
                    "type": "String"
                }
            ],
            "return": {
                "description": "A pair with the removed variable name and value",
                "type": "Object"
            },
            "class": "Mask.ControlVariables",
            "namespace": "Mask"
        },
        {
            "file": "src\\wizard\\wizard_control_variables.js",
            "line": 88,
            "description": "Clear the control variables collection",
            "itemtype": "method",
            "name": "clear",
            "class": "Mask.ControlVariables",
            "namespace": "Mask"
        },
        {
            "file": "src\\wizard\\wizard_menu.js",
            "line": 9,
            "description": "Renders the wizard menu",
            "itemtype": "method",
            "name": "render",
            "params": [
                {
                    "name": "wizards",
                    "description": "The wizards list",
                    "type": "Array"
                }
            ],
            "static": 1,
            "class": "Mask.WizardMenu",
            "namespace": "Mask"
        },
        {
            "file": "src\\wizard\\wizard_menu.js",
            "line": 57,
            "description": "Shows the wizard menu",
            "itemtype": "method",
            "name": "show",
            "params": [
                {
                    "name": "wizards",
                    "description": "The wizards list",
                    "type": "Array"
                }
            ],
            "static": 1,
            "class": "Mask.WizardMenu",
            "namespace": "Mask"
        },
        {
            "file": "src\\wizard\\wizard_menu.js",
            "line": 81,
            "description": "Hides the wizard menu",
            "itemtype": "method",
            "name": "hide",
            "params": [
                {
                    "name": "callback",
                    "description": "The callback to be called after hiding the menu",
                    "type": "Function"
                }
            ],
            "static": 1,
            "class": "Mask.WizardMenu",
            "namespace": "Mask"
        },
        {
            "file": "src\\copyright_info.js",
            "line": 1,
            "license": "Sideshow - An incredible Javascript interactive help Library\nVersion: 0.3.4\nDate: 2014-05-28\nAuthor: Alcides Queiroz [alcidesqueiroz(at)gmail(dot)com]\nAvailable under Apache License 2.0 (https://raw2.github.com/fortesinformatica/sideshow/master/LICENSE)",
            "class": "",
            "namespace": "Mask"
        }
    ],
    "warnings": [
        {
            "message": "unknown tag: license",
            "line": " src\\copyright_info.js:1"
        },
        {
            "message": "Missing item type\nSideshow Settings",
            "line": " src\\general\\config.js:1"
        },
        {
            "message": "Missing item type\nApplication route to persists user preferences",
            "line": " src\\general\\config.js:8"
        },
        {
            "message": "Missing item type\nLogged in user",
            "line": " src\\general\\config.js:18"
        },
        {
            "message": "Missing item type\nChosen language for sideshow interface",
            "line": " src\\general\\config.js:27"
        },
        {
            "message": "Missing item type\nDefines if the intro screen (the tutorial list) will be\tskipped when there's just one \ntutorial available. This way, when Sideshow is invoked, the first step is directly shown.",
            "line": " src\\general\\config.js:35"
        },
        {
            "message": "Missing item type\nStrings Dictionary",
            "line": " src\\general\\dictionary.js:1"
        },
        {
            "message": "Missing item type\nThe polling functions queue",
            "line": " src\\general\\polling.js:9"
        },
        {
            "message": "Missing item type\nA flag that controls if the polling is locked",
            "line": " src\\general\\polling.js:18"
        },
        {
            "message": "Missing item type\nObject holding dimension information for the screen",
            "line": " src\\general\\screen.js:9"
        },
        {
            "message": "Missing item type\nShows a warning  in a pre-defined format",
            "line": " src\\general\\utility_functions.js:1"
        },
        {
            "message": "Missing item type\nParses a string in the format \"#px\" in a number",
            "line": " src\\general\\utility_functions.js:12"
        },
        {
            "message": "Missing item type\nGets a string from the dictionary in the current language",
            "line": " src\\general\\utility_functions.js:25"
        },
        {
            "message": "Missing item type\nRegisters hotkeys to be used when running Sideshow",
            "line": " src\\general\\utility_functions.js:41"
        },
        {
            "message": "Missing item type\nUnregisters hotkeys used when running Sideshow",
            "line": " src\\general\\utility_functions.js:50"
        },
        {
            "message": "Missing item type\nRegisters global hotkeys",
            "line": " src\\general\\utility_functions.js:64"
        },
        {
            "message": "Missing item type\nRemoves nodes created by Sideshow (except mask, which remains due to performance reasons when recalling Sideshow)",
            "line": " src\\general\\utility_functions.js:81"
        },
        {
            "message": "Missing item type\nPossible statuses for an animation",
            "line": " src\\general\\variables.js:36"
        },
        {
            "message": "Missing item type\nThe jQuery wrapped DOM element for the visual item",
            "line": " src\\interface_itens\\visual_item.js:9"
        },
        {
            "message": "Missing item type\nThe jQuery wrapped DOM element for the visual item",
            "line": " src\\interface_itens\\visual_item.js:17"
        },
        {
            "message": "Missing item type\nThe parts composing the mask",
            "line": " src\\mask\\composite_mask.js:24"
        },
        {
            "message": "Missing item type",
            "line": " src\\mask\\composite_mask_corner_part.js:11"
        },
        {
            "message": "Missing item type\nAn object holding positioning information for the mask corner part",
            "line": " src\\mask\\composite_mask_corner_part.js:17"
        },
        {
            "message": "Missing item type\nAn object holding dimension information for the mask corner part",
            "line": " src\\mask\\composite_mask_corner_part.js:25"
        },
        {
            "message": "Missing item type\nAn object holding border radius information for the mask corner part",
            "line": " src\\mask\\composite_mask_corner_part.js:33"
        },
        {
            "message": "Missing item type",
            "line": " src\\mask\\composite_mask_part.js:1"
        },
        {
            "message": "Missing item type\nAn object holding positioning information for the mask part",
            "line": " src\\mask\\composite_mask_part.js:7"
        },
        {
            "message": "Missing item type\nAn object holding dimension information for the mask part",
            "line": " src\\mask\\composite_mask_part.js:15"
        },
        {
            "message": "Missing item type\nNamespace to hold classes for mask control",
            "line": " src\\mask\\mask.js:1"
        },
        {
            "message": "Missing item type\nThe jQuery wrapped object which will be pointed by this arrow",
            "line": " src\\step\\arrow.js:8"
        },
        {
            "message": "Missing item type\nFlag created to set if the arrow was visible once, this is used for recreating references to the targets DOM objects",
            "line": " src\\step\\arrow.js:16"
        },
        {
            "message": "Missing item type\nThe step description text content",
            "line": " src\\step\\step_description.js:12"
        },
        {
            "message": "Missing item type\nThe title text for the step description panel",
            "line": " src\\step\\step_description.js:20"
        },
        {
            "message": "Missing item type\nAn object holding dimension information for the Step Description panel",
            "line": " src\\step\\step_description.js:28"
        },
        {
            "message": "Missing item type\nAn object holding positioning information for the Step Description panel",
            "line": " src\\step\\step_description.js:36"
        },
        {
            "message": "Missing item type\nAn object representing the next button for a step description panel",
            "line": " src\\step\\step_description.js:44"
        },
        {
            "message": "Missing item type\nThe text for the next button",
            "line": " src\\step\\step_description_next_button.js:9"
        },
        {
            "message": "Missing item type\nAn object holding dimension information for the Details Panel",
            "line": " src\\step\\step_details_panel.js:10"
        },
        {
            "message": "Missing item type\nAn object holding positioning information for the Details Panel",
            "line": " src\\step\\step_details_panel.js:18"
        },
        {
            "message": "Missing item type\nThe current subject jQuery wrapped DOM element",
            "line": " src\\step\\subject.js:9"
        },
        {
            "message": "Missing item type\nThe current subject dimension information",
            "line": " src\\step\\subject.js:18"
        },
        {
            "message": "Missing item type\nThe current subject positioning information",
            "line": " src\\step\\subject.js:27"
        },
        {
            "message": "Missing item type\nThe current subject border radius information",
            "line": " src\\step\\subject.js:36"
        },
        {
            "message": "Missing item type\nA function to prepare the environment for running a wizard (e.g. redirecting to some screen)",
            "line": " src\\wizard\\wizard.js:20"
        },
        {
            "message": "Missing item type\nAn object with listeners to this wizard (e.g. beforeWizardStarts, afterWizardEnds)",
            "line": " src\\wizard\\wizard.js:28"
        },
        {
            "message": "Missing item type\nA configuration flag that defines if the step position (e.g. 2/10, 3/15, 12/12) will be shown",
            "line": " src\\wizard\\wizard.js:36"
        },
        {
            "message": "Missing item type\nAn array with related wizards names. These wizards are listed after the ending of the current wizard.",
            "line": " src\\wizard\\wizard.js:44"
        },
        {
            "message": "Missing item type\nThe wizard unique name (used internally as an identifier)",
            "line": " src\\wizard\\wizard.js:52"
        },
        {
            "message": "Missing item type\nThe wizard title (will be shown in the list of available wizards)",
            "line": " src\\wizard\\wizard.js:60"
        },
        {
            "message": "Missing item type\nThe wizard description (will be shown in the list of available wizards)",
            "line": " src\\wizard\\wizard.js:68"
        },
        {
            "message": "Missing item type\nThe wizard estimated completion time (will be shown in the list of available wizards)",
            "line": " src\\wizard\\wizard.js:76"
        },
        {
            "message": "Missing item type\nA collection of rules to infer whether a wizard should be available in a specific screen",
            "line": " src\\wizard\\wizard.js:84"
        },
        {
            "message": "Missing item type\nThe sequence of steps for this wizard",
            "line": " src\\wizard\\wizard.js:92"
        },
        {
            "message": "Missing item type\nPoints to the current step object in a playing wizard",
            "line": " src\\wizard\\wizard.js:101"
        },
        {
            "message": "Missing item type",
            "line": " src\\copyright_info.js:1"
        }
    ]
}